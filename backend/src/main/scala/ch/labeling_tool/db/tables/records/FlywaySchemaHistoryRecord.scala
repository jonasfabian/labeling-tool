/*
 * This file is generated by jOOQ.
 */
package ch.labeling_tool.db.tables.records


import ch.labeling_tool.db.tables.FlywaySchemaHistory

import java.lang.Byte
import java.lang.Integer
import java.lang.String
import java.sql.Timestamp

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record10
import org.jooq.Row10
import org.jooq.impl.UpdatableRecordImpl


class FlywaySchemaHistoryRecord extends UpdatableRecordImpl[FlywaySchemaHistoryRecord](FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY) with Record10[Integer, String, String, String, String, Integer, String, Timestamp, Integer, Byte] {

  def setInstalledRank(value : Integer) : Unit = {
    set(0, value)
  }

  def getInstalledRank : Integer = {
    val r = get(0)
    if (r == null) null else r.asInstanceOf[Integer]
  }

  def setVersion(value : String) : Unit = {
    set(1, value)
  }

  def getVersion : String = {
    val r = get(1)
    if (r == null) null else r.asInstanceOf[String]
  }

  def setDescription(value : String) : Unit = {
    set(2, value)
  }

  def getDescription : String = {
    val r = get(2)
    if (r == null) null else r.asInstanceOf[String]
  }

  def setType(value : String) : Unit = {
    set(3, value)
  }

  def getType : String = {
    val r = get(3)
    if (r == null) null else r.asInstanceOf[String]
  }

  def setScript(value : String) : Unit = {
    set(4, value)
  }

  def getScript : String = {
    val r = get(4)
    if (r == null) null else r.asInstanceOf[String]
  }

  def setChecksum(value : Integer) : Unit = {
    set(5, value)
  }

  def getChecksum : Integer = {
    val r = get(5)
    if (r == null) null else r.asInstanceOf[Integer]
  }

  def setInstalledBy(value : String) : Unit = {
    set(6, value)
  }

  def getInstalledBy : String = {
    val r = get(6)
    if (r == null) null else r.asInstanceOf[String]
  }

  def setInstalledOn(value : Timestamp) : Unit = {
    set(7, value)
  }

  def getInstalledOn : Timestamp = {
    val r = get(7)
    if (r == null) null else r.asInstanceOf[Timestamp]
  }

  def setExecutionTime(value : Integer) : Unit = {
    set(8, value)
  }

  def getExecutionTime : Integer = {
    val r = get(8)
    if (r == null) null else r.asInstanceOf[Integer]
  }

  def setSuccess(value : Byte) : Unit = {
    set(9, value)
  }

  def getSuccess : Byte = {
    val r = get(9)
    if (r == null) null else r.asInstanceOf[Byte]
  }

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------
  override def key : Record1[Integer] = {
    return super.key.asInstanceOf[ Record1[Integer] ]
  }

  // -------------------------------------------------------------------------
  // Record10 type implementation
  // -------------------------------------------------------------------------

  override def fieldsRow : Row10[Integer, String, String, String, String, Integer, String, Timestamp, Integer, Byte] = {
    super.fieldsRow.asInstanceOf[ Row10[Integer, String, String, String, String, Integer, String, Timestamp, Integer, Byte] ]
  }

  override def valuesRow : Row10[Integer, String, String, String, String, Integer, String, Timestamp, Integer, Byte] = {
    super.valuesRow.asInstanceOf[ Row10[Integer, String, String, String, String, Integer, String, Timestamp, Integer, Byte] ]
  }
  override def field1 : Field[Integer] = FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK
  override def field2 : Field[String] = FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.VERSION
  override def field3 : Field[String] = FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.DESCRIPTION
  override def field4 : Field[String] = FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.TYPE
  override def field5 : Field[String] = FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.SCRIPT
  override def field6 : Field[Integer] = FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.CHECKSUM
  override def field7 : Field[String] = FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_BY
  override def field8 : Field[Timestamp] = FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_ON
  override def field9 : Field[Integer] = FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.EXECUTION_TIME
  override def field10 : Field[Byte] = FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.SUCCESS
  override def component1 : Integer = getInstalledRank
  override def component2 : String = getVersion
  override def component3 : String = getDescription
  override def component4 : String = getType
  override def component5 : String = getScript
  override def component6 : Integer = getChecksum
  override def component7 : String = getInstalledBy
  override def component8 : Timestamp = getInstalledOn
  override def component9 : Integer = getExecutionTime
  override def component10 : Byte = getSuccess
  override def value1 : Integer = getInstalledRank
  override def value2 : String = getVersion
  override def value3 : String = getDescription
  override def value4 : String = getType
  override def value5 : String = getScript
  override def value6 : Integer = getChecksum
  override def value7 : String = getInstalledBy
  override def value8 : Timestamp = getInstalledOn
  override def value9 : Integer = getExecutionTime
  override def value10 : Byte = getSuccess

  override def value1(value : Integer) : FlywaySchemaHistoryRecord = {
    setInstalledRank(value)
    this
  }

  override def value2(value : String) : FlywaySchemaHistoryRecord = {
    setVersion(value)
    this
  }

  override def value3(value : String) : FlywaySchemaHistoryRecord = {
    setDescription(value)
    this
  }

  override def value4(value : String) : FlywaySchemaHistoryRecord = {
    setType(value)
    this
  }

  override def value5(value : String) : FlywaySchemaHistoryRecord = {
    setScript(value)
    this
  }

  override def value6(value : Integer) : FlywaySchemaHistoryRecord = {
    setChecksum(value)
    this
  }

  override def value7(value : String) : FlywaySchemaHistoryRecord = {
    setInstalledBy(value)
    this
  }

  override def value8(value : Timestamp) : FlywaySchemaHistoryRecord = {
    setInstalledOn(value)
    this
  }

  override def value9(value : Integer) : FlywaySchemaHistoryRecord = {
    setExecutionTime(value)
    this
  }

  override def value10(value : Byte) : FlywaySchemaHistoryRecord = {
    setSuccess(value)
    this
  }

  override def values(value1 : Integer, value2 : String, value3 : String, value4 : String, value5 : String, value6 : Integer, value7 : String, value8 : Timestamp, value9 : Integer, value10 : Byte) : FlywaySchemaHistoryRecord = {
    this.value1(value1)
    this.value2(value2)
    this.value3(value3)
    this.value4(value4)
    this.value5(value5)
    this.value6(value6)
    this.value7(value7)
    this.value8(value8)
    this.value9(value9)
    this.value10(value10)
    this
  }

  def this(installedRank : Integer, version : String, description : String, `type` : String, script : String, checksum : Integer, installedBy : String, installedOn : Timestamp, executionTime : Integer, success : Byte) = {
    this()

    set(0, installedRank)
    set(1, version)
    set(2, description)
    set(3, `type`)
    set(4, script)
    set(5, checksum)
    set(6, installedBy)
    set(7, installedOn)
    set(8, executionTime)
    set(9, success)
  }
}
