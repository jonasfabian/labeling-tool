/*
 * This file is generated by jOOQ.
 */
package ch.labeling_tool.db.tables.records


import ch.labeling_tool.db.tables.Textaudioindex

import java.lang.Double
import java.lang.Integer

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record11
import org.jooq.Row11
import org.jooq.impl.UpdatableRecordImpl


class TextaudioindexRecord extends UpdatableRecordImpl[TextaudioindexRecord](Textaudioindex.TEXTAUDIOINDEX) with Record11[Integer, Integer, Integer, Integer, Double, Double, Integer, Integer, Integer, Integer, Integer] {

  def setId(value : Integer) : Unit = {
    set(0, value)
  }

  def getId : Integer = {
    val r = get(0)
    if (r == null) null else r.asInstanceOf[Integer]
  }

  def setSamplingrate(value : Integer) : Unit = {
    set(1, value)
  }

  def getSamplingrate : Integer = {
    val r = get(1)
    if (r == null) null else r.asInstanceOf[Integer]
  }

  def setTextstartpos(value : Integer) : Unit = {
    set(2, value)
  }

  def getTextstartpos : Integer = {
    val r = get(2)
    if (r == null) null else r.asInstanceOf[Integer]
  }

  def setTextendpos(value : Integer) : Unit = {
    set(3, value)
  }

  def getTextendpos : Integer = {
    val r = get(3)
    if (r == null) null else r.asInstanceOf[Integer]
  }

  def setAudiostartpos(value : Double) : Unit = {
    set(4, value)
  }

  def getAudiostartpos : Double = {
    val r = get(4)
    if (r == null) null else r.asInstanceOf[Double]
  }

  def setAudioendpos(value : Double) : Unit = {
    set(5, value)
  }

  def getAudioendpos : Double = {
    val r = get(5)
    if (r == null) null else r.asInstanceOf[Double]
  }

  def setSpeakerkey(value : Integer) : Unit = {
    set(6, value)
  }

  def getSpeakerkey : Integer = {
    val r = get(6)
    if (r == null) null else r.asInstanceOf[Integer]
  }

  def setLabeled(value : Integer) : Unit = {
    set(7, value)
  }

  def getLabeled : Integer = {
    val r = get(7)
    if (r == null) null else r.asInstanceOf[Integer]
  }

  def setCorrect(value : Integer) : Unit = {
    set(8, value)
  }

  def getCorrect : Integer = {
    val r = get(8)
    if (r == null) null else r.asInstanceOf[Integer]
  }

  def setWrong(value : Integer) : Unit = {
    set(9, value)
  }

  def getWrong : Integer = {
    val r = get(9)
    if (r == null) null else r.asInstanceOf[Integer]
  }

  def setTranscriptFileId(value : Integer) : Unit = {
    set(10, value)
  }

  def getTranscriptFileId : Integer = {
    val r = get(10)
    if (r == null) null else r.asInstanceOf[Integer]
  }

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------
  override def key : Record1[Integer] = {
    return super.key.asInstanceOf[ Record1[Integer] ]
  }

  // -------------------------------------------------------------------------
  // Record11 type implementation
  // -------------------------------------------------------------------------

  override def fieldsRow : Row11[Integer, Integer, Integer, Integer, Double, Double, Integer, Integer, Integer, Integer, Integer] = {
    super.fieldsRow.asInstanceOf[ Row11[Integer, Integer, Integer, Integer, Double, Double, Integer, Integer, Integer, Integer, Integer] ]
  }

  override def valuesRow : Row11[Integer, Integer, Integer, Integer, Double, Double, Integer, Integer, Integer, Integer, Integer] = {
    super.valuesRow.asInstanceOf[ Row11[Integer, Integer, Integer, Integer, Double, Double, Integer, Integer, Integer, Integer, Integer] ]
  }
  override def field1 : Field[Integer] = Textaudioindex.TEXTAUDIOINDEX.ID
  override def field2 : Field[Integer] = Textaudioindex.TEXTAUDIOINDEX.SAMPLINGRATE
  override def field3 : Field[Integer] = Textaudioindex.TEXTAUDIOINDEX.TEXTSTARTPOS
  override def field4 : Field[Integer] = Textaudioindex.TEXTAUDIOINDEX.TEXTENDPOS
  override def field5 : Field[Double] = Textaudioindex.TEXTAUDIOINDEX.AUDIOSTARTPOS
  override def field6 : Field[Double] = Textaudioindex.TEXTAUDIOINDEX.AUDIOENDPOS
  override def field7 : Field[Integer] = Textaudioindex.TEXTAUDIOINDEX.SPEAKERKEY
  override def field8 : Field[Integer] = Textaudioindex.TEXTAUDIOINDEX.LABELED
  override def field9 : Field[Integer] = Textaudioindex.TEXTAUDIOINDEX.CORRECT
  override def field10 : Field[Integer] = Textaudioindex.TEXTAUDIOINDEX.WRONG
  override def field11 : Field[Integer] = Textaudioindex.TEXTAUDIOINDEX.TRANSCRIPT_FILE_ID
  override def component1 : Integer = getId
  override def component2 : Integer = getSamplingrate
  override def component3 : Integer = getTextstartpos
  override def component4 : Integer = getTextendpos
  override def component5 : Double = getAudiostartpos
  override def component6 : Double = getAudioendpos
  override def component7 : Integer = getSpeakerkey
  override def component8 : Integer = getLabeled
  override def component9 : Integer = getCorrect
  override def component10 : Integer = getWrong
  override def component11 : Integer = getTranscriptFileId
  override def value1 : Integer = getId
  override def value2 : Integer = getSamplingrate
  override def value3 : Integer = getTextstartpos
  override def value4 : Integer = getTextendpos
  override def value5 : Double = getAudiostartpos
  override def value6 : Double = getAudioendpos
  override def value7 : Integer = getSpeakerkey
  override def value8 : Integer = getLabeled
  override def value9 : Integer = getCorrect
  override def value10 : Integer = getWrong
  override def value11 : Integer = getTranscriptFileId

  override def value1(value : Integer) : TextaudioindexRecord = {
    setId(value)
    this
  }

  override def value2(value : Integer) : TextaudioindexRecord = {
    setSamplingrate(value)
    this
  }

  override def value3(value : Integer) : TextaudioindexRecord = {
    setTextstartpos(value)
    this
  }

  override def value4(value : Integer) : TextaudioindexRecord = {
    setTextendpos(value)
    this
  }

  override def value5(value : Double) : TextaudioindexRecord = {
    setAudiostartpos(value)
    this
  }

  override def value6(value : Double) : TextaudioindexRecord = {
    setAudioendpos(value)
    this
  }

  override def value7(value : Integer) : TextaudioindexRecord = {
    setSpeakerkey(value)
    this
  }

  override def value8(value : Integer) : TextaudioindexRecord = {
    setLabeled(value)
    this
  }

  override def value9(value : Integer) : TextaudioindexRecord = {
    setCorrect(value)
    this
  }

  override def value10(value : Integer) : TextaudioindexRecord = {
    setWrong(value)
    this
  }

  override def value11(value : Integer) : TextaudioindexRecord = {
    setTranscriptFileId(value)
    this
  }

  override def values(value1 : Integer, value2 : Integer, value3 : Integer, value4 : Integer, value5 : Double, value6 : Double, value7 : Integer, value8 : Integer, value9 : Integer, value10 : Integer, value11 : Integer) : TextaudioindexRecord = {
    this.value1(value1)
    this.value2(value2)
    this.value3(value3)
    this.value4(value4)
    this.value5(value5)
    this.value6(value6)
    this.value7(value7)
    this.value8(value8)
    this.value9(value9)
    this.value10(value10)
    this.value11(value11)
    this
  }

  def this(id : Integer, samplingrate : Integer, textstartpos : Integer, textendpos : Integer, audiostartpos : Double, audioendpos : Double, speakerkey : Integer, labeled : Integer, correct : Integer, wrong : Integer, transcriptFileId : Integer) = {
    this()

    set(0, id)
    set(1, samplingrate)
    set(2, textstartpos)
    set(3, textendpos)
    set(4, audiostartpos)
    set(5, audioendpos)
    set(6, speakerkey)
    set(7, labeled)
    set(8, correct)
    set(9, wrong)
    set(10, transcriptFileId)
  }
}
