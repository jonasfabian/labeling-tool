/*
 * This file is generated by jOOQ.
 */
package ch.labeling_tool.db


import ch.labeling_tool.db.tables.Audio
import ch.labeling_tool.db.tables.Avatar
import ch.labeling_tool.db.tables.Chat
import ch.labeling_tool.db.tables.Chatmember
import ch.labeling_tool.db.tables.Chatmessage
import ch.labeling_tool.db.tables.FlywaySchemaHistory
import ch.labeling_tool.db.tables.Textaudioindex
import ch.labeling_tool.db.tables.Transcript
import ch.labeling_tool.db.tables.User
import ch.labeling_tool.db.tables.Userandtextaudioindex
import ch.labeling_tool.db.tables.records.AudioRecord
import ch.labeling_tool.db.tables.records.AvatarRecord
import ch.labeling_tool.db.tables.records.ChatRecord
import ch.labeling_tool.db.tables.records.ChatmemberRecord
import ch.labeling_tool.db.tables.records.ChatmessageRecord
import ch.labeling_tool.db.tables.records.FlywaySchemaHistoryRecord
import ch.labeling_tool.db.tables.records.TextaudioindexRecord
import ch.labeling_tool.db.tables.records.TranscriptRecord
import ch.labeling_tool.db.tables.records.UserRecord
import ch.labeling_tool.db.tables.records.UserandtextaudioindexRecord

import java.lang.Integer

import org.jooq.Identity
import org.jooq.UniqueKey
import org.jooq.impl.Internal


object Keys {

  // -------------------------------------------------------------------------
  // IDENTITY definitions
  // -------------------------------------------------------------------------

  val IDENTITY_AUDIO = Identities0.IDENTITY_AUDIO
  val IDENTITY_AVATAR = Identities0.IDENTITY_AVATAR
  val IDENTITY_CHAT = Identities0.IDENTITY_CHAT
  val IDENTITY_CHATMEMBER = Identities0.IDENTITY_CHATMEMBER
  val IDENTITY_CHATMESSAGE = Identities0.IDENTITY_CHATMESSAGE
  val IDENTITY_TEXTAUDIOINDEX = Identities0.IDENTITY_TEXTAUDIOINDEX
  val IDENTITY_TRANSCRIPT = Identities0.IDENTITY_TRANSCRIPT
  val IDENTITY_USER = Identities0.IDENTITY_USER
  val IDENTITY_USERANDTEXTAUDIOINDEX = Identities0.IDENTITY_USERANDTEXTAUDIOINDEX

  // -------------------------------------------------------------------------
  // UNIQUE and PRIMARY KEY definitions
  // -------------------------------------------------------------------------

  val KEY_AUDIO_PRIMARY = UniqueKeys0.KEY_AUDIO_PRIMARY
  val KEY_AVATAR_PRIMARY = UniqueKeys0.KEY_AVATAR_PRIMARY
  val KEY_AVATAR_USERID = UniqueKeys0.KEY_AVATAR_USERID
  val KEY_CHAT_PRIMARY = UniqueKeys0.KEY_CHAT_PRIMARY
  val KEY_CHAT_CHATNAME = UniqueKeys0.KEY_CHAT_CHATNAME
  val KEY_CHATMEMBER_PRIMARY = UniqueKeys0.KEY_CHATMEMBER_PRIMARY
  val KEY_CHATMEMBER_UNI = UniqueKeys0.KEY_CHATMEMBER_UNI
  val KEY_CHATMESSAGE_PRIMARY = UniqueKeys0.KEY_CHATMESSAGE_PRIMARY
  val KEY_FLYWAY_SCHEMA_HISTORY_PRIMARY = UniqueKeys0.KEY_FLYWAY_SCHEMA_HISTORY_PRIMARY
  val KEY_TEXTAUDIOINDEX_PRIMARY = UniqueKeys0.KEY_TEXTAUDIOINDEX_PRIMARY
  val KEY_TRANSCRIPT_PRIMARY = UniqueKeys0.KEY_TRANSCRIPT_PRIMARY
  val KEY_USER_PRIMARY = UniqueKeys0.KEY_USER_PRIMARY
  val KEY_USER_EMAIL = UniqueKeys0.KEY_USER_EMAIL
  val KEY_USERANDTEXTAUDIOINDEX_PRIMARY = UniqueKeys0.KEY_USERANDTEXTAUDIOINDEX_PRIMARY
  val KEY_USERANDTEXTAUDIOINDEX_UNI = UniqueKeys0.KEY_USERANDTEXTAUDIOINDEX_UNI

  // -------------------------------------------------------------------------
  // FOREIGN KEY definitions
  // -------------------------------------------------------------------------


  // -------------------------------------------------------------------------
  // [#1459] distribute members to avoid static initialisers > 64kb
  // -------------------------------------------------------------------------

  private object Identities0 {
    val IDENTITY_AUDIO : Identity[AudioRecord, Integer] = Internal.createIdentity(Audio.AUDIO, Audio.AUDIO.ID)
    val IDENTITY_AVATAR : Identity[AvatarRecord, Integer] = Internal.createIdentity(Avatar.AVATAR, Avatar.AVATAR.ID)
    val IDENTITY_CHAT : Identity[ChatRecord, Integer] = Internal.createIdentity(Chat.CHAT, Chat.CHAT.ID)
    val IDENTITY_CHATMEMBER : Identity[ChatmemberRecord, Integer] = Internal.createIdentity(Chatmember.CHATMEMBER, Chatmember.CHATMEMBER.ID)
    val IDENTITY_CHATMESSAGE : Identity[ChatmessageRecord, Integer] = Internal.createIdentity(Chatmessage.CHATMESSAGE, Chatmessage.CHATMESSAGE.ID)
    val IDENTITY_TEXTAUDIOINDEX : Identity[TextaudioindexRecord, Integer] = Internal.createIdentity(Textaudioindex.TEXTAUDIOINDEX, Textaudioindex.TEXTAUDIOINDEX.ID)
    val IDENTITY_TRANSCRIPT : Identity[TranscriptRecord, Integer] = Internal.createIdentity(Transcript.TRANSCRIPT, Transcript.TRANSCRIPT.ID)
    val IDENTITY_USER : Identity[UserRecord, Integer] = Internal.createIdentity(User.USER, User.USER.ID)
    val IDENTITY_USERANDTEXTAUDIOINDEX : Identity[UserandtextaudioindexRecord, Integer] = Internal.createIdentity(Userandtextaudioindex.USERANDTEXTAUDIOINDEX, Userandtextaudioindex.USERANDTEXTAUDIOINDEX.ID)
  }

  private object UniqueKeys0 {
    val KEY_AUDIO_PRIMARY : UniqueKey[AudioRecord] = Internal.createUniqueKey(Audio.AUDIO, "KEY_audio_PRIMARY", Audio.AUDIO.ID)
    val KEY_AVATAR_PRIMARY : UniqueKey[AvatarRecord] = Internal.createUniqueKey(Avatar.AVATAR, "KEY_avatar_PRIMARY", Avatar.AVATAR.ID)
    val KEY_AVATAR_USERID : UniqueKey[AvatarRecord] = Internal.createUniqueKey(Avatar.AVATAR, "KEY_avatar_userId", Avatar.AVATAR.USERID)
    val KEY_CHAT_PRIMARY : UniqueKey[ChatRecord] = Internal.createUniqueKey(Chat.CHAT, "KEY_chat_PRIMARY", Chat.CHAT.ID)
    val KEY_CHAT_CHATNAME : UniqueKey[ChatRecord] = Internal.createUniqueKey(Chat.CHAT, "KEY_chat_chatName", Chat.CHAT.CHATNAME)
    val KEY_CHATMEMBER_PRIMARY : UniqueKey[ChatmemberRecord] = Internal.createUniqueKey(Chatmember.CHATMEMBER, "KEY_chatMember_PRIMARY", Chatmember.CHATMEMBER.ID)
    val KEY_CHATMEMBER_UNI : UniqueKey[ChatmemberRecord] = Internal.createUniqueKey(Chatmember.CHATMEMBER, "KEY_chatMember_uni", Chatmember.CHATMEMBER.CHATID, Chatmember.CHATMEMBER.USERID)
    val KEY_CHATMESSAGE_PRIMARY : UniqueKey[ChatmessageRecord] = Internal.createUniqueKey(Chatmessage.CHATMESSAGE, "KEY_chatMessage_PRIMARY", Chatmessage.CHATMESSAGE.ID)
    val KEY_FLYWAY_SCHEMA_HISTORY_PRIMARY : UniqueKey[FlywaySchemaHistoryRecord] = Internal.createUniqueKey(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, "KEY_flyway_schema_history_PRIMARY", FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK)
    val KEY_TEXTAUDIOINDEX_PRIMARY : UniqueKey[TextaudioindexRecord] = Internal.createUniqueKey(Textaudioindex.TEXTAUDIOINDEX, "KEY_textAudioIndex_PRIMARY", Textaudioindex.TEXTAUDIOINDEX.ID)
    val KEY_TRANSCRIPT_PRIMARY : UniqueKey[TranscriptRecord] = Internal.createUniqueKey(Transcript.TRANSCRIPT, "KEY_transcript_PRIMARY", Transcript.TRANSCRIPT.ID)
    val KEY_USER_PRIMARY : UniqueKey[UserRecord] = Internal.createUniqueKey(User.USER, "KEY_user_PRIMARY", User.USER.ID)
    val KEY_USER_EMAIL : UniqueKey[UserRecord] = Internal.createUniqueKey(User.USER, "KEY_user_email", User.USER.EMAIL)
    val KEY_USERANDTEXTAUDIOINDEX_PRIMARY : UniqueKey[UserandtextaudioindexRecord] = Internal.createUniqueKey(Userandtextaudioindex.USERANDTEXTAUDIOINDEX, "KEY_userAndTextAudioIndex_PRIMARY", Userandtextaudioindex.USERANDTEXTAUDIOINDEX.ID)
    val KEY_USERANDTEXTAUDIOINDEX_UNI : UniqueKey[UserandtextaudioindexRecord] = Internal.createUniqueKey(Userandtextaudioindex.USERANDTEXTAUDIOINDEX, "KEY_userAndTextAudioIndex_uni", Userandtextaudioindex.USERANDTEXTAUDIOINDEX.USERID, Userandtextaudioindex.USERANDTEXTAUDIOINDEX.TEXTAUDIOINDEXID)
  }
}
