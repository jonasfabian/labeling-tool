/*
 * This file is generated by jOOQ.
 */
package jooq.db.tables


import java.lang.Class
import java.lang.Double
import java.lang.Long
import java.lang.String
import java.util.Arrays
import java.util.List

import jooq.db.Indexes
import jooq.db.Keys
import jooq.db.LabelingTool
import jooq.db.tables.records.TextaudioRecord

import org.jooq.Field
import org.jooq.ForeignKey
import org.jooq.Identity
import org.jooq.Index
import org.jooq.Name
import org.jooq.Record
import org.jooq.Schema
import org.jooq.Table
import org.jooq.TableField
import org.jooq.UniqueKey
import org.jooq.impl.DSL
import org.jooq.impl.Internal
import org.jooq.impl.TableImpl

import scala.Array


object Textaudio {

  val TEXTAUDIO = new Textaudio
}

class Textaudio(
  alias : Name,
  child : Table[_ <: Record],
  path : ForeignKey[_ <: Record, TextaudioRecord],
  aliased : Table[TextaudioRecord],
  parameters : Array[ Field[_] ]
)
extends TableImpl[TextaudioRecord](
  alias,
  LabelingTool.LABELING_TOOL,
  child,
  path,
  aliased,
  parameters,
  DSL.comment("")
)
{

  override def getRecordType : Class[TextaudioRecord] = {
    classOf[TextaudioRecord]
  }

  val ID : TableField[TextaudioRecord, Long] = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), "")

  val AUDIOSTART : TableField[TextaudioRecord, Double] = createField("audioStart", org.jooq.impl.SQLDataType.FLOAT.nullable(false), "")

  val AUDIOEND : TableField[TextaudioRecord, Double] = createField("audioEnd", org.jooq.impl.SQLDataType.FLOAT.nullable(false), "")

  val TEXT : TableField[TextaudioRecord, String] = createField("text", org.jooq.impl.SQLDataType.CLOB.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.CLOB)), "")

  val FILEID : TableField[TextaudioRecord, Long] = createField("fileId", org.jooq.impl.SQLDataType.BIGINT.nullable(false), "")

  val SPEAKER : TableField[TextaudioRecord, String] = createField("speaker", org.jooq.impl.SQLDataType.VARCHAR(45).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), "")

  val LABELED : TableField[TextaudioRecord, Long] = createField("labeled", org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.BIGINT)), "")

  val CORRECT : TableField[TextaudioRecord, Long] = createField("correct", org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.BIGINT)), "")

  val WRONG : TableField[TextaudioRecord, Long] = createField("wrong", org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.BIGINT)), "")

  def this() = {
    this(DSL.name("textaudio"), null, null, null, null)
  }

  def this(alias : String) = {
    this(DSL.name(alias), null, null, jooq.db.tables.Textaudio.TEXTAUDIO, null)
  }

  def this(alias : Name) = {
    this(alias, null, null, jooq.db.tables.Textaudio.TEXTAUDIO, null)
  }

  private def this(alias : Name, aliased : Table[TextaudioRecord]) = {
    this(alias, null, null, aliased, null)
  }

  def this(child : Table[_ <: Record], key : ForeignKey[_ <: Record, TextaudioRecord]) = {
    this(Internal.createPathAlias(child, key), child, key, jooq.db.tables.Textaudio.TEXTAUDIO, null)
  }

  override def getSchema : Schema = LabelingTool.LABELING_TOOL

  override def getIndexes : List[ Index ] = {
    return Arrays.asList[ Index ](Indexes.TEXTAUDIO_PRIMARY)
  }

  override def getIdentity : Identity[TextaudioRecord, Long] = {
    Keys.IDENTITY_TEXTAUDIO
  }

  override def getPrimaryKey : UniqueKey[TextaudioRecord] = {
    Keys.KEY_TEXTAUDIO_PRIMARY
  }

  override def getKeys : List[ UniqueKey[TextaudioRecord] ] = {
    return Arrays.asList[ UniqueKey[TextaudioRecord] ](Keys.KEY_TEXTAUDIO_PRIMARY)
  }

  override def as(alias : String) : Textaudio = {
    new Textaudio(DSL.name(alias), this)
  }

  override def as(alias : Name) : Textaudio = {
    new Textaudio(alias, this)
  }

  override def rename(name : String) : Textaudio = {
    new Textaudio(DSL.name(name), null)
  }

  override def rename(name : Name) : Textaudio = {
    new Textaudio(name, null)
  }
}
