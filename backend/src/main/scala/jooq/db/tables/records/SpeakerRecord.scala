/*
 * This file is generated by jOOQ.
 */
package jooq.db.tables.records


import java.lang.Long
import java.lang.String

import jooq.db.tables.Speaker

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record5
import org.jooq.Row5
import org.jooq.impl.UpdatableRecordImpl


class SpeakerRecord extends UpdatableRecordImpl[SpeakerRecord](Speaker.SPEAKER) with Record5[Long, Long, String, String, String] {

  def setId(value : Long) : Unit = {
    set(0, value)
  }

  def getId : Long = {
    val r = get(0)
    if (r == null) null else r.asInstanceOf[Long]
  }

  def setSpeakerid(value : Long) : Unit = {
    set(1, value)
  }

  def getSpeakerid : Long = {
    val r = get(1)
    if (r == null) null else r.asInstanceOf[Long]
  }

  def setSex(value : String) : Unit = {
    set(2, value)
  }

  def getSex : String = {
    val r = get(2)
    if (r == null) null else r.asInstanceOf[String]
  }

  def setLanguageused(value : String) : Unit = {
    set(3, value)
  }

  def getLanguageused : String = {
    val r = get(3)
    if (r == null) null else r.asInstanceOf[String]
  }

  def setDialect(value : String) : Unit = {
    set(4, value)
  }

  def getDialect : String = {
    val r = get(4)
    if (r == null) null else r.asInstanceOf[String]
  }

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------
  override def key : Record1[Long] = {
    return super.key.asInstanceOf[ Record1[Long] ]
  }

  // -------------------------------------------------------------------------
  // Record5 type implementation
  // -------------------------------------------------------------------------

  override def fieldsRow : Row5[Long, Long, String, String, String] = {
    super.fieldsRow.asInstanceOf[ Row5[Long, Long, String, String, String] ]
  }

  override def valuesRow : Row5[Long, Long, String, String, String] = {
    super.valuesRow.asInstanceOf[ Row5[Long, Long, String, String, String] ]
  }
  override def field1 : Field[Long] = Speaker.SPEAKER.ID
  override def field2 : Field[Long] = Speaker.SPEAKER.SPEAKERID
  override def field3 : Field[String] = Speaker.SPEAKER.SEX
  override def field4 : Field[String] = Speaker.SPEAKER.LANGUAGEUSED
  override def field5 : Field[String] = Speaker.SPEAKER.DIALECT
  override def component1 : Long = getId
  override def component2 : Long = getSpeakerid
  override def component3 : String = getSex
  override def component4 : String = getLanguageused
  override def component5 : String = getDialect
  override def value1 : Long = getId
  override def value2 : Long = getSpeakerid
  override def value3 : String = getSex
  override def value4 : String = getLanguageused
  override def value5 : String = getDialect

  override def value1(value : Long) : SpeakerRecord = {
    setId(value)
    this
  }

  override def value2(value : Long) : SpeakerRecord = {
    setSpeakerid(value)
    this
  }

  override def value3(value : String) : SpeakerRecord = {
    setSex(value)
    this
  }

  override def value4(value : String) : SpeakerRecord = {
    setLanguageused(value)
    this
  }

  override def value5(value : String) : SpeakerRecord = {
    setDialect(value)
    this
  }

  override def values(value1 : Long, value2 : Long, value3 : String, value4 : String, value5 : String) : SpeakerRecord = {
    this.value1(value1)
    this.value2(value2)
    this.value3(value3)
    this.value4(value4)
    this.value5(value5)
    this
  }

  def this(id : Long, speakerid : Long, sex : String, languageused : String, dialect : String) = {
    this()

    set(0, id)
    set(1, speakerid)
    set(2, sex)
    set(3, languageused)
    set(4, dialect)
  }
}
