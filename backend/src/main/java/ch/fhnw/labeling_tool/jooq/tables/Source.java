/*
 * This file is generated by jOOQ.
 */
package ch.fhnw.labeling_tool.jooq.tables;


import ch.fhnw.labeling_tool.jooq.Indexes;
import ch.fhnw.labeling_tool.jooq.Keys;
import ch.fhnw.labeling_tool.jooq.LabelingTool;
import ch.fhnw.labeling_tool.jooq.enums.SourceLicence;
import ch.fhnw.labeling_tool.jooq.tables.records.SourceRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Source extends TableImpl<SourceRecord> {

    private static final long serialVersionUID = -1308343958;

    public static final Source SOURCE = new Source();

    @Override
    public Class<SourceRecord> getRecordType() {
        return SourceRecord.class;
    }

    public final TableField<SourceRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    public final TableField<SourceRecord, String> DESCRIPTION = createField(DSL.name("description"), org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    public final TableField<SourceRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(45).nullable(false), this, "");

    public final TableField<SourceRecord, String> RAW_AUDIO_PATH = createField(DSL.name("raw_audio_path"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    public final TableField<SourceRecord, String> RAW_FILE_PATH = createField(DSL.name("raw_file_path"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    public final TableField<SourceRecord, SourceLicence> LICENCE = createField(DSL.name("licence"), org.jooq.impl.SQLDataType.VARCHAR(8).defaultValue(org.jooq.impl.DSL.inline("'PUBLIC'", org.jooq.impl.SQLDataType.VARCHAR)).asEnumDataType(ch.fhnw.labeling_tool.jooq.enums.SourceLicence.class), this, "");

    public Source() {
        this(DSL.name("source"), null);
    }

    public Source(String alias) {
        this(DSL.name(alias), SOURCE);
    }

    public Source(Name alias) {
        this(alias, SOURCE);
    }

    private Source(Name alias, Table<SourceRecord> aliased) {
        this(alias, aliased, null);
    }

    private Source(Name alias, Table<SourceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Source(Table<O> child, ForeignKey<O, SourceRecord> key) {
        super(child, key, SOURCE);
    }

    @Override
    public Schema getSchema() {
        return LabelingTool.LABELING_TOOL;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SOURCE_PRIMARY);
    }

    @Override
    public Identity<SourceRecord, Long> getIdentity() {
        return Keys.IDENTITY_SOURCE;
    }

    @Override
    public UniqueKey<SourceRecord> getPrimaryKey() {
        return Keys.KEY_SOURCE_PRIMARY;
    }

    @Override
    public List<UniqueKey<SourceRecord>> getKeys() {
        return Arrays.<UniqueKey<SourceRecord>>asList(Keys.KEY_SOURCE_PRIMARY);
    }

    @Override
    public Source as(String alias) {
        return new Source(DSL.name(alias), this);
    }

    @Override
    public Source as(Name alias) {
        return new Source(alias, this);
    }

    @Override
    public Source rename(String name) {
        return new Source(DSL.name(name), null);
    }

    @Override
    public Source rename(Name name) {
        return new Source(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, String, String, String, String, SourceLicence> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
