/*
 * This file is generated by jOOQ.
 */
package ch.fhnw.labeling_tool.jooq.tables.records;


import ch.fhnw.labeling_tool.jooq.enums.RecordingLabel;
import ch.fhnw.labeling_tool.jooq.tables.Recording;

import java.sql.Timestamp;

import javax.validation.constraints.NotNull;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RecordingRecord extends UpdatableRecordImpl<RecordingRecord> implements Record8<Long, Long, Long, Timestamp, RecordingLabel, Long, Long, Timestamp> {

    private static final long serialVersionUID = 1257347394;

    public void setId(Long value) {
        set(0, value);
    }

    public Long getId() {
        return (Long) get(0);
    }

    public void setExcerptId(Long value) {
        set(1, value);
    }

    @NotNull
    public Long getExcerptId() {
        return (Long) get(1);
    }

    public void setUserId(Long value) {
        set(2, value);
    }

    @NotNull
    public Long getUserId() {
        return (Long) get(2);
    }

    public void setTime(Timestamp value) {
        set(3, value);
    }

    public Timestamp getTime() {
        return (Timestamp) get(3);
    }

    public void setLabel(RecordingLabel value) {
        set(4, value);
    }

    public RecordingLabel getLabel() {
        return (RecordingLabel) get(4);
    }

    public void setWrong(Long value) {
        set(5, value);
    }

    public Long getWrong() {
        return (Long) get(5);
    }

    public void setCorrect(Long value) {
        set(6, value);
    }

    public Long getCorrect() {
        return (Long) get(6);
    }

    public void setDeleted(Timestamp value) {
        set(7, value);
    }

    public Timestamp getDeleted() {
        return (Timestamp) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, Long, Long, Timestamp, RecordingLabel, Long, Long, Timestamp> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Long, Long, Long, Timestamp, RecordingLabel, Long, Long, Timestamp> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Recording.RECORDING.ID;
    }

    @Override
    public Field<Long> field2() {
        return Recording.RECORDING.EXCERPT_ID;
    }

    @Override
    public Field<Long> field3() {
        return Recording.RECORDING.USER_ID;
    }

    @Override
    public Field<Timestamp> field4() {
        return Recording.RECORDING.TIME;
    }

    @Override
    public Field<RecordingLabel> field5() {
        return Recording.RECORDING.LABEL;
    }

    @Override
    public Field<Long> field6() {
        return Recording.RECORDING.WRONG;
    }

    @Override
    public Field<Long> field7() {
        return Recording.RECORDING.CORRECT;
    }

    @Override
    public Field<Timestamp> field8() {
        return Recording.RECORDING.DELETED;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getExcerptId();
    }

    @Override
    public Long component3() {
        return getUserId();
    }

    @Override
    public Timestamp component4() {
        return getTime();
    }

    @Override
    public RecordingLabel component5() {
        return getLabel();
    }

    @Override
    public Long component6() {
        return getWrong();
    }

    @Override
    public Long component7() {
        return getCorrect();
    }

    @Override
    public Timestamp component8() {
        return getDeleted();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getExcerptId();
    }

    @Override
    public Long value3() {
        return getUserId();
    }

    @Override
    public Timestamp value4() {
        return getTime();
    }

    @Override
    public RecordingLabel value5() {
        return getLabel();
    }

    @Override
    public Long value6() {
        return getWrong();
    }

    @Override
    public Long value7() {
        return getCorrect();
    }

    @Override
    public Timestamp value8() {
        return getDeleted();
    }

    @Override
    public RecordingRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public RecordingRecord value2(Long value) {
        setExcerptId(value);
        return this;
    }

    @Override
    public RecordingRecord value3(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public RecordingRecord value4(Timestamp value) {
        setTime(value);
        return this;
    }

    @Override
    public RecordingRecord value5(RecordingLabel value) {
        setLabel(value);
        return this;
    }

    @Override
    public RecordingRecord value6(Long value) {
        setWrong(value);
        return this;
    }

    @Override
    public RecordingRecord value7(Long value) {
        setCorrect(value);
        return this;
    }

    @Override
    public RecordingRecord value8(Timestamp value) {
        setDeleted(value);
        return this;
    }

    @Override
    public RecordingRecord values(Long value1, Long value2, Long value3, Timestamp value4, RecordingLabel value5, Long value6, Long value7, Timestamp value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    public RecordingRecord() {
        super(Recording.RECORDING);
    }

    public RecordingRecord(Long id, Long excerptId, Long userId, Timestamp time, RecordingLabel label, Long wrong, Long correct, Timestamp deleted) {
        super(Recording.RECORDING);

        set(0, id);
        set(1, excerptId);
        set(2, userId);
        set(3, time);
        set(4, label);
        set(5, wrong);
        set(6, correct);
        set(7, deleted);
    }
}
