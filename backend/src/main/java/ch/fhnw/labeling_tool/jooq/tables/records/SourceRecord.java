/*
 * This file is generated by jOOQ.
 */
package ch.fhnw.labeling_tool.jooq.tables.records;


import ch.fhnw.labeling_tool.jooq.enums.SourceLicence;
import ch.fhnw.labeling_tool.jooq.tables.Source;

import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SourceRecord extends UpdatableRecordImpl<SourceRecord> implements Record6<Long, String, String, String, String, SourceLicence> {

    private static final long serialVersionUID = 1412343438;

    public void setId(Long value) {
        set(0, value);
    }

    public Long getId() {
        return (Long) get(0);
    }

    public void setDescription(String value) {
        set(1, value);
    }

    @NotNull
    @Size(max = 65535)
    public String getDescription() {
        return (String) get(1);
    }

    public void setName(String value) {
        set(2, value);
    }

    @NotNull
    @Size(max = 45)
    public String getName() {
        return (String) get(2);
    }

    public void setRawAudioPath(String value) {
        set(3, value);
    }

    @NotNull
    @Size(max = 255)
    public String getRawAudioPath() {
        return (String) get(3);
    }

    public void setRawFilePath(String value) {
        set(4, value);
    }

    @NotNull
    @Size(max = 255)
    public String getRawFilePath() {
        return (String) get(4);
    }

    public void setLicence(SourceLicence value) {
        set(5, value);
    }

    public SourceLicence getLicence() {
        return (SourceLicence) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, String, String, String, String, SourceLicence> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Long, String, String, String, String, SourceLicence> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Source.SOURCE.ID;
    }

    @Override
    public Field<String> field2() {
        return Source.SOURCE.DESCRIPTION;
    }

    @Override
    public Field<String> field3() {
        return Source.SOURCE.NAME;
    }

    @Override
    public Field<String> field4() {
        return Source.SOURCE.RAW_AUDIO_PATH;
    }

    @Override
    public Field<String> field5() {
        return Source.SOURCE.RAW_FILE_PATH;
    }

    @Override
    public Field<SourceLicence> field6() {
        return Source.SOURCE.LICENCE;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getDescription();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public String component4() {
        return getRawAudioPath();
    }

    @Override
    public String component5() {
        return getRawFilePath();
    }

    @Override
    public SourceLicence component6() {
        return getLicence();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getDescription();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public String value4() {
        return getRawAudioPath();
    }

    @Override
    public String value5() {
        return getRawFilePath();
    }

    @Override
    public SourceLicence value6() {
        return getLicence();
    }

    @Override
    public SourceRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public SourceRecord value2(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public SourceRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public SourceRecord value4(String value) {
        setRawAudioPath(value);
        return this;
    }

    @Override
    public SourceRecord value5(String value) {
        setRawFilePath(value);
        return this;
    }

    @Override
    public SourceRecord value6(SourceLicence value) {
        setLicence(value);
        return this;
    }

    @Override
    public SourceRecord values(Long value1, String value2, String value3, String value4, String value5, SourceLicence value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    public SourceRecord() {
        super(Source.SOURCE);
    }

    public SourceRecord(Long id, String description, String name, String rawAudioPath, String rawFilePath, SourceLicence licence) {
        super(Source.SOURCE);

        set(0, id);
        set(1, description);
        set(2, name);
        set(3, rawAudioPath);
        set(4, rawFilePath);
        set(5, licence);
    }
}
